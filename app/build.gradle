version = '0.7.0'

apply plugin: 'com.android.application'

android {
    lintOptions {
        abortOnError false
    }

    dexOptions {
              //incremental true
              //javaMaxHeapSize "4g"
    }

    signingConfigs {
        release {
            storeFile file("$rootProject.projectDir/$rootProject.testUserKeyStorePath",)
            storePassword rootProject.keyStorePassword
            keyAlias rootProject.signKeyAlias
            keyPassword rootProject.keyStorePassword
        }
    }

    defaultConfig {
        minSdkVersion  18
        compileSdkVersion  22
        buildToolsVersion  '22.0.1'
        targetSdkVersion  22
        multiDexEnabled  true
        sourceCompatibility = JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug { }
        release {
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk') && !outputFile.name.contains("debug")) {
                copy {
                    from output.outputFile
                    into projectDir
                    rename (outputFile.name, "${signedAndroidAppName}.apk")
                }
                println "copied apk into ${projectDir}"
            }
        }
    }


    productFlavors {
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin to pre-dex each module
            // and produce an APK that can be tested on Android Lollipop without time consuming dex merging processes.
            // https://developer.android.com/tools/building/multidex.html
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 18
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }
}

ext {
    supportLibVersion = '22.2.+'
}

dependencies {
    compile 'com.android.support:multidex:1.0.0'
    compile ('org.apache.httpcomponents:httpmime:4.2.2') {
        exclude module: 'httpcore'
    }
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.google.zxing:android-core:3.2.1"
    compile "com.google.zxing:core:3.2.1"
    compile "com.fasterxml.jackson.core:jackson-core:2.6.2"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.2"
    //https://github.com/votingsystem/votingsystem-android-bouncycastle
    compile "org.votingsystem.android:bouncycastle:0.7.0-SNAPSHOT"

    compile project(":dniedroid")

    //BUG with Android 5.0 and Tyrus client!!! WSS connections throw SSLHandshakeException
    //https://java.net/projects/tyrus/lists/users/archive/2015-01/message/0
    compile "org.glassfish.tyrus.bundles:tyrus-standalone-client:1.12"

}

preBuild.dependsOn 'setAndroidEnv'


task setAndroidEnv() << {
    //env.each{println it}
    String androidHome= System.getenv()['ANDROID_HOME']
    if(!androidHome) throw new RuntimeException('Android SDK not Found you must install -> http://developer.android.com/sdk/index.html')
}
